>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 12)

>>> bg.integer_validator("age", "twelve")
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("days", 0)
Traceback (most recent call last):
ValueError: days must be greater than 0

>>> bg.integer_validator("days", -2)
Traceback (most recent call last):
ValueError: days must be greater than 0

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("age")
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", [4])
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer

>>> try:
...		area = bg.area()
... except Exception as e:
...		print("[{}] {}".format(e.__class__.__name__, e))
[Exception] area() is not implemented
