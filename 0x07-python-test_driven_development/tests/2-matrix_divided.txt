The ``2-matrix_divided`` module

Using matrix_divided

import ``matrix_divided`` from ``2-matrix_divided`` module

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix_divided([[1, 4, 3], [4, 5, 6]], 3)
	[[0.33, 1.33, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided([[1, 4, 3], [4, 5, 6]], "test")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided([[1, 4, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided(([1, 4, 3], [4, 5, 6]), 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([( 1, 4, 3 ), ( 4, 5, 6 )], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 4, "Test"], [4, ["test"], 6]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 4, 3, 5], [4, 5, 6]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size
